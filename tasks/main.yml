# LDAP Server

# TODO - on the first run of this, we need to start and stop slapd once to seed the DB
# Once this happens, we can run slapd-build-config.sh as slapd-legacy.conf is changed.
# If you haven't run it once, the build fails.
- name: Include OS-specific variables
  include_vars: "{{ ansible_os_family }}.yml"
  tags: ['auth']

- name: Include OS-specific setup tasks
  include_tasks: "setup-{{ ansible_os_family }}.yml"
  tags: ['auth']

- name: ensure rsyslog config is in place
  copy: src=etc.rsyslog.d.ldap.conf dest=/etc/rsyslog.d/ldap.conf owner=root group=root mode=0640
  register: copy_result
  when: auth_use_rsyslog
  tags: ['auth']

- name: ensure rsyslog picks up the change
  service: name=rsyslog state=restarted
  when:
    - auth_use_rsyslog
    - copy_result is changed
  tags: ['auth']

- name: setup the directories
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: 0750
  with_items:
    - { path: "{{ auth_ldap_config_dir }}/slapd.d", owner: "{{ auth_ldap_user }}", group: "{{ auth_ldap_group }}" }
    - { path: "{{ auth_ldap_config_dir }}/schema", owner: root, group: "{{ auth_ldap_group }}" }
    - { path: /var/lib/ldap, owner: "{{ auth_ldap_user }}", group: "{{ auth_ldap_group }}" }
  tags: ['auth']

- name: place the ldap schema files
  copy:
    src: "etc.openldap.schema.{{ item }}"
    dest: "{{ auth_ldap_config_dir }}/schema/{{ item }}"
    owner: root
    group: root
    mode: 0640
  with_items: "{{ auth_ldap_schemas }}"
  tags: ['auth']

- name: place the slapd-build-config.sh file
  template:
    src: etc.openldap.slapd-build-config.sh.j2
    dest: "{{ auth_ldap_config_dir }}/slapd-build-config.sh"
    owner: root
    group: root
    mode: 0700
  tags: ['auth']

- name: place the slapd-legacy.conf file
  template:
    src: etc.openldap.slapd-legacy.conf.j2
    dest: "{{ auth_ldap_config_dir }}/slapd-legacy.conf"
    owner: "{{ auth_ldap_user }}"
    group: "{{ auth_ldap_group }}"
    mode: 0640
  tags: ['auth']

- name: place the sys init script for ldap
  template:
    src: "{{ auth_init_script_template }}"
    dest: "{{ auth_init_script_dest }}"
    owner: root
    group: root
    mode: 0640
  tags: ['auth']

- name: place the /var/lib/DB_CONFIG lib file
  copy:
    src: var.lib.ldap.DB_CONFIG
    dest: /var/lib/ldap/DB_CONFIG
    owner: "{{ auth_ldap_user }}"
    group: "{{ auth_ldap_group }}"
    mode: 0640
  tags: ['auth']
